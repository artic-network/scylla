def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')

params {
    // TODO nf-core: Specify your pipeline's command line flags
    // Input options
    input                      = null

    // Boilerplate options
    outdir                     = "output"
    tracedir                   = "${params.outdir}/pipeline_info/${trace_timestamp}"
    publish_dir_mode           = 'copy'
    email                      = null
    email_on_fail              = null
    plaintext_email            = false
    monochrome_logs            = false
    hook_url                   = null
    help                       = false
    version                    = false
    validate_params            = true
    show_hidden_params         = false
    schema_ignore_params       = 'genomes'

    // Max resource options
    // Defaults only, expecting to be overwritten
    max_memory                 = '128.GB'
    max_cpus                   = 16
    max_time                   = '240.h'

    help = false
    version = false
    wfversion = "v0.0.1"

    store_dir = "store_dir"

    climb = false
    local = false
    raise_server = false

    unique_id = null
    fastq = null
    fastq1 = null
    fastq2 = null
    fastq_dir = null
    metadata = null

    read_type = "illumina"
    paired = false

    database = null
    taxonomy = null
    bracken_dist = null
    bracken_length = null
    bracken_level = 'S'
    database_set = "Viral"
    database_sets = [
        'Viral': [
            'database': 'https://genome-idx.s3.amazonaws.com/kraken/k2_viral_20221209.tar.gz',
            'taxonomy': 'https://ftp.ncbi.nlm.nih.gov/pub/taxonomy/taxdump.tar.gz'
        ],
        'EuPath': [
            'database': 'https://genome-idx.s3.amazonaws.com/kraken/k2_eupathdb48_20201113.tar.gz',
            'taxonomy': 'https://ftp.ncbi.nlm.nih.gov/pub/taxonomy/taxdump.tar.gz'
        ],
        'PlusPF-8': [
            'database': 'https://genome-idx.s3.amazonaws.com/kraken/k2_pluspf_8gb_20210517.tar.gz',
            'taxonomy': 'https://ftp.ncbi.nlm.nih.gov/pub/taxonomy/taxdump.tar.gz'
        ],
        'ncbi_16s_18s': [
            'database': 'https://ont-exd-int-s3-euwst1-epi2me-labs.s3.amazonaws.com/wf-metagenomics/ncbi_16s_18s/ncbi_targeted_loci_kraken2.tar.gz',
            'taxonomy': 'https://ftp.ncbi.nlm.nih.gov/pub/taxonomy/taxdump.tar.gz'
        ]
    ]

    kraken_report = null
    bracken_report = null
    kraken_assignments = null
    run_bracken = true
    additional_bracken_jsons = null
    assembly_rank="S G"
    assembly_min_reads = 10
    assembly_min_percent = 1
    max_human_reads_before_rejection = 1000

    assembler = null
    classifier = "virbot"
    genomad_db = "/usr/genomad_db"

    disable_ping = false
    threads = 2
    k2_port = 8080
    k2_host = 'localhost'
    process_label = "scylla"
    monochrome_logs = false

    taxonomy_dir = "/shared/public/db/taxonomy/"

    validate_params = true
    show_hidden_params = false

    analyse_unclassified = false
    classify_novel_viruses = false
    write_assembly_stats = true
    schema_ignore_params = 'show_hidden_params,validate_params,monochrome_logs,aws_queue,aws_image_prefix,pangolin_version,wfversion,wf,process_label'

    wf {
      example_cmd = [
          "--fastq test_data/barcode01/reads.fastq.gz",
      ]
      agent = null
      container = "biowilko/scylla"
      container_sha = "sha256:4ff33113bd8f0b87ca971ec1e313d8e022b6131829fdd33694d490b399254f9f"
    }
}

if ( params.read_type == 'ont' ) {
        params.assembler = 'rnabloom'
} else if ( params.read_type == 'illumina' ) {
        params.assembler = 'megahit'
} else {
        error "Invalid specification of read_type: ${params.read_type} - must be one of [ont, illumina]"
}
