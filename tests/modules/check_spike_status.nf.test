nextflow_workflow {

    name "Test Workflow check_spike_status"
    script "modules/check_spike_status.nf"
    workflow "check_spike_status"
    tag "unit"

    test("Should produce spike report") {

        when {
            params {
                spike_ins = "12242"
            }
            workflow {
                """
                input[0] = Channel.of(
                    tuple(
                        "spikein_test",
                        "PlusPF",
                        file("${projectDir}/tests/test-data/spike_in/tmv_kraken_report.txt", checkIfExists: true)
                    )
                )
                input[1] = Channel.of(
                    tuple(
                        "spikein_test",
                        file("${projectDir}/tests/test-data/spike_in/tmv_mock.fastq", checkIfExists: true)
                    )
                )
                """
            }
        }

        then {
            assert workflow.success
            assert path("${outputDir}/spikein_test/classifications/spike_count_summary.json").exists()
            assert path("${outputDir}/spikein_test/classifications/spike_summary.json").exists()
            assert snapshot(workflow.out, path("${outputDir}/spikein_test/classifications/spike_count_summary.json")).match()

            // def spike_summary_json = path("${outputDir}/spikein_test/classifications/spike_count_summary.json").json
            // def data = spike_summary_json["Tobacco mosaic virus"]["12242"]
            // assert data.name == "Tobacco mosaic virus"
            // assert data.classified_count == 10
            // assert data.classified_percentage == 50.0
        }

    }

}
